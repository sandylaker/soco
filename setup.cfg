[metadata]
name = soco
version=0.1.0
description = A Dual-Perspective Approach to Evaluating Feature Attribution Methods (TMLR 2024)
long_description = file: README.md
author = Yawei Li
license = MIT
license_files = LICENSE
url = https://github.com/sandylaker/soco
keywords = Deep Learning, Computer Vision, Explainable AI

[options]
packages = find:
python_requires = >=3.8
install_requires =
    albumentations
    captum
    numpy
    mmengine
    opencv-python
    scipy
    timm
    torch
    torchvision

[options.extras_require]
torchray = torchray

dev =
    build
    codecov
    flake8
    isort
    mypy
    pytest
    pytest-cov
    pytest-xdist
    setuptools
    yapf

[bdist_wheel]
universal=1

[aliases]
test=pytest

[yapf]
based_on_style = pep8
blank_line_before_nested_class_or_def = true
split_before_expression_after_opening_paren = true
split_before_first_argument = true
split_all_top_level_comma_separated_values = true
column_limit = 88

[flake8]
max-line-length = 88
ignore = E722,E203,E231,F841,W503,W504,F403,E402,F405
per-file-ignores = __init__.py: F401

[mypy]
allow_redefinition = true
ignore_missing_imports = true
no_site_packages = true
plugins = numpy.typing.mypy_plugin

[mypy-tests.*]
strict_optional = false

[isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
extra_standard_library = pkg_resources,setuptools,logging,os,warnings,abc,typing,collections,functools,
    datetime,copy,inspect,xml
known_first_party = soco
known_third_party = numpy,torch,pytest,albumentations,cv2,torchvision,timm,captum,scipy,torchray,mmengine
no_lines_before = STDLIB,LOCALFOLDER
default_section = THIRDPARTY
